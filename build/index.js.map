{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/context.tsx", "../app/createEmotionCache.ts", "../app/root.tsx", "../app/routes/index.tsx", "../app/components/Header.tsx", "../app/routes/main.tsx", "../app/routes/main/index.tsx", "../app/utils/db.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// entry.server.tsx\nimport { renderToString } from 'react-dom/server'\nimport { CacheProvider } from '@emotion/react'\nimport createEmotionServer from '@emotion/server/create-instance'\nimport { RemixServer } from '@remix-run/react'\nimport type { EntryContext } from '@remix-run/node' // Depends on the runtime you choose\n\nimport { ServerStyleContext } from './context'\nimport createEmotionCache from './createEmotionCache'\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  const cache = createEmotionCache()\n  const { extractCriticalToChunks } = createEmotionServer(cache)\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>,\n  )\n\n  const chunks = extractCriticalToChunks(html)\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>,\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}", "// context.tsx\nimport React, { createContext } from 'react'\n\nexport interface ServerStyleContextData {\n  key: string\n  ids: Array<string>\n  css: string\n}\n\nexport const ServerStyleContext = createContext<ServerStyleContextData[] | null>(null)\n\nexport interface ClientStyleContextData {\n  reset: () => void\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(null)", "// createEmotionCache.ts\nimport createCache from '@emotion/cache'\n\nexport const defaultCache = createEmotionCache()\n\nexport default function createEmotionCache() {\n  return createCache({ key: 'cha' })\n}", "import { ChakraProvider } from \"@chakra-ui/react\";\nimport type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <ChakraProvider>\n          <Outlet />\n        </ChakraProvider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { Box, Input } from \"@chakra-ui/react\";\nimport { Outlet } from \"@remix-run/react\";\nimport Header from \"../components/Header\";\n\nexport default function Index() {\n  return (\n    <Box bg={\"black\"} height={\"100vh\"} display={\"flex\"} flexDir={\"column\"} alignItems={\"center\"}>\n      <Header />\n    </Box>\n  );\n}\n", "import { Box, Text } from \"@chakra-ui/react\";\n\nexport default function Header() {\n  return (\n    <Box h={\"2rem\"} background={\"black\"} display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\n      <Text color={\"white\"}>Todo List App</Text>\n    </Box>\n  );\n}", "import { Box } from \"@chakra-ui/react\";\nimport { Outlet } from \"@remix-run/react\";\nimport Header from \"~/components/Header\";\n\nexport default function Main() {\n  return (\n    <Box bg={\"black\"} height={\"100vh\"} display={\"flex\"} flexDir={\"column\"} alignItems={\"center\"}>\n      <Header />\n      <Outlet />\n    </Box>\n  );\n}", "import { Box, Text, Input, Button, Textarea } from \"@chakra-ui/react\";\nimport { Form } from \"@remix-run/react\";\nimport { ActionArgs, json, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\nimport { Todo } from \"@prisma/client\";\n\nexport async function loader() {\n  let test = json({\n    todos: await db.todo.findMany(),\n  })\n  return (test)\n}\n\nexport async function action({ request }: ActionArgs) {\n  const body = await request.formData();\n  const todo = body.get(\"todo\")!.toString();\n\n  if (\n    typeof todo !== \"string\"\n  ) {\n    throw new Error(`Form not submitted correctly.`);\n  }\n\n  const todoTest = await db.todo.create({\n    data: { todo },\n  })\n\n  console.log(todoTest.todo)\n\n  return redirect(\"/main\");\n}\n\nexport default function MainIndex() {\n  const data = useLoaderData();\n\n  return (\n    <Box>\n      <Box display={\"flex\"} flexDir={\"row\"} marginTop={\"2rem\"}>\n        <Form method=\"post\">\n          <Box display={\"flex\"} flexDir={\"column\"}>\n            <Input name=\"todo\" color={\"white\"} placeholder={\"Title\"} required />\n          </Box>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Box>\n      <Box display={\"flex\"} flexDir={\"column\"}>\n        {data.todos.map((todo: Todo) => (\n          <Text color={\"white\"} key={todo.id}>{todo.todo}</Text>\n        ))}\n      </Box>\n    </Box>\n  );\n}", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n  var __db: PrismaClient | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n  db = new PrismaClient();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n  }\n  db = global.__db;\n}\n\nexport { db };\n", "export default {'version':'17ff3842','entry':{'module':'/build/entry.client-VBOTNMF5.js','imports':['/build/_shared/chunk-3UWPWFUS.js','/build/_shared/chunk-BNIZYPYA.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-XMSJCS5H.js','imports':['/build/_shared/chunk-I534BYEB.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-MRG7BHH4.js','imports':['/build/_shared/chunk-HH53KPYL.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/main':{'id':'routes/main','parentId':'root','path':'main','index':undefined,'caseSensitive':undefined,'module':'/build/routes/main-HN6SN4NK.js','imports':['/build/_shared/chunk-HH53KPYL.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/main/index':{'id':'routes/main/index','parentId':'routes/main','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/main/index-O37WSC6Q.js','imports':['/build/_shared/chunk-I534BYEB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-17FF3842.js'};", "\nimport * as entryServer from \"/home/jb/practiceprojects/todolist/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/index.tsx\";\nimport * as route2 from \"./routes/main.tsx\";\nimport * as route3 from \"./routes/main/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":false,\"v2_meta\":false,\"v2_routeConvention\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/main\": {\n      id: \"routes/main\",\n      parentId: \"root\",\n      path: \"main\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/main/index\": {\n      id: \"routes/main/index\",\n      parentId: \"routes/main\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "createCache", "createEmotionServer", "import_react", "import_jsx_dev_runtime", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "main_exports", "import_react", "import_jsx_dev_runtime", "main_exports"]
}
